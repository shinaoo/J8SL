实现一个EventBus设计模式

虽然EventBus设计模式跟观察者模式类似,但是比观察者模式更强大,更灵活.
可以看成是Java内部消息中间件

先看构成:

Bus接口,里面的方法主要是注册以及发送事件(post方法).EventBus是其实现类,是同步的.AsyncEventBus是一个异步的实现
EventBus里面有一个Registry和一个Dispatcher.Registry主要是管理注册类,Dispatcher主要是分发事件

EventContext接口,在Dispatcher里面有一个BaseEventContext是其实现类,只是保存以及返回一些属性

EventExceptionhandler,没有其实现类

那么一个事件产生到消费的过程是如何走的呢,在EventBusMain中.
可以看到bus.post之后就产生了一个事件,在事件产生之前,我们需要注册订阅者Subscriber,目前我们有Subscriber1和Subscriber2.
在EventBus的register中我们调用的是Registry来保存订阅者.我们需要保存的订阅者的是取出里面带有@Subscribe注解的方法,以及订阅者对象
然后在post方法中就调用dispatcher的dispatch方法来调用每一个订阅者的方法来消费事件了

